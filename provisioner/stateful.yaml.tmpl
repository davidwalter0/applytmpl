# ------------------------- Namespaced Client StatefulSet ------------------------- #
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ .ProvisionerClientName }}
  namespace: {{ .Namespace }}
spec:
  serviceName: {{ .ProvisionerClientName }}
  replicas: 2
  selector:
    matchLabels:
      app: {{ .ProvisionerClientName }}
  template:
    metadata:
      labels:
        app: {{ .ProvisionerClientName }}
    spec:
      containers:
      - name: {{ .ProvisionerClientName }}
        image: {{ .BusyboxImage }}
        command:
          - "/bin/sh"
        args:
          - "-c"
          - while true; do
              (
                printf "$(date +%Y.%m.%d.%H.%M.%S) HOSTNAME            ${HOSTNAME}\n";
                printf "$(date +%Y.%m.%d.%H.%M.%S) NODE_NAME           ${NODE_NAME}\n";
                printf "$(date +%Y.%m.%d.%H.%M.%S) POD_NAME            ${POD_NAME}\n";
                printf "$(date +%Y.%m.%d.%H.%M.%S) POD_NAMESPACE       ${POD_NAMESPACE}\n";
                printf "$(date +%Y.%m.%d.%H.%M.%S) POD_IP              ${POD_IP}\n";
                printf "$(date +%Y.%m.%d.%H.%M.%S) POD_SERVICE_ACCOUNT ${POD_SERVICE_ACCOUNT}\n";
                printf "$(date +%Y.%m.%d.%H.%M.%S) CPU_REQUEST         ${CPU_REQUEST}\n";
                printf "$(date +%Y.%m.%d.%H.%M.%S) CPU_LIMIT           ${CPU_LIMIT}\n";
                printf "$(date +%Y.%m.%d.%H.%M.%S) MEM_REQUEST         ${MEM_REQUEST}\n";
                printf "$(date +%Y.%m.%d.%H.%M.%S) MEM_LIMIT           ${MEM_LIMIT}\n";
              ) > /mnt/${POD_NAME}.SUCCESS ;
              sleep 10;
            done;
        ports:
        - name: {{ .ProvisionerClientName }}
          containerPort: 80

        resources:
          requests:
            memory: "32Mi"
            cpu: "125m"
          limits:
            memory: "64Mi"
            cpu: "250m"

        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: POD_SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: CPU_REQUEST
            valueFrom:
              resourceFieldRef:
                containerName: {{ .ProvisionerClientName }}
                resource: requests.cpu
          - name: CPU_LIMIT
            valueFrom:
              resourceFieldRef:
                containerName: {{ .ProvisionerClientName }}
                resource: limits.cpu
          - name: MEM_REQUEST
            valueFrom:
              resourceFieldRef:
                containerName: {{ .ProvisionerClientName }}
                resource: requests.memory
          - name: MEM_LIMIT
            valueFrom:
              resourceFieldRef:
                containerName: {{ .ProvisionerClientName }}
                resource: limits.memory

        volumeMounts:
          - name: nfs-pvc
            mountPath: "/mnt"
  volumeClaimTemplates:
  - metadata:
      name: nfs-pvc
      annotations:
        volume.beta.kubernetes.io/storage-class: {{ .StorageClassName }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi

# ------------------------- Service ------------------------- #
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .ProvisionerClientName }}
  labels:
    app: {{ .ProvisionerClientName }}
  namespace: {{ .Namespace }}
spec:
  ports:
  - port: 80
    name: {{ .ProvisionerClientName }}
  # clusterIP: None
  selector:
    app: {{ .ProvisionerClientName }}

# ------------------------- Default NS Client StatefulSet ------------------------- #
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ .ProvisionerClientName }}
spec:
  serviceName: {{ .ProvisionerClientName }}
  replicas: 2
  selector:
    matchLabels:
      app: {{ .ProvisionerClientName }}
  template:
    metadata:
      labels:
        app: {{ .ProvisionerClientName }}
    spec:
      serviceAccount: {{ .NfsProvisionerName }}
      containers:
      - name: {{ .ProvisionerClientName }}
        image: {{ .BusyboxImage }}
        command:
          - "/bin/sh"
        args:
          - "-c"
          - while true; do
              (
                printf "$(date +%Y.%m.%d.%H.%M.%S) HOSTNAME            ${HOSTNAME}\n";
                printf "$(date +%Y.%m.%d.%H.%M.%S) NODE_NAME           ${NODE_NAME}\n";
                printf "$(date +%Y.%m.%d.%H.%M.%S) POD_NAME            ${POD_NAME}\n";
                printf "$(date +%Y.%m.%d.%H.%M.%S) POD_NAMESPACE       ${POD_NAMESPACE}\n";
                printf "$(date +%Y.%m.%d.%H.%M.%S) POD_IP              ${POD_IP}\n";
                printf "$(date +%Y.%m.%d.%H.%M.%S) POD_SERVICE_ACCOUNT ${POD_SERVICE_ACCOUNT}\n";
                printf "$(date +%Y.%m.%d.%H.%M.%S) CPU_REQUEST         ${CPU_REQUEST}\n";
                printf "$(date +%Y.%m.%d.%H.%M.%S) CPU_LIMIT           ${CPU_LIMIT}\n";
                printf "$(date +%Y.%m.%d.%H.%M.%S) MEM_REQUEST         ${MEM_REQUEST}\n";
                printf "$(date +%Y.%m.%d.%H.%M.%S) MEM_LIMIT           ${MEM_LIMIT}\n";
              ) > /mnt/${POD_NAME}.SUCCESS ;
              sleep 10;
            done;
        ports:
        - name: {{ .ProvisionerClientName }}
          containerPort: 80

        resources:
          requests:
            memory: "32Mi"
            cpu: "125m"
          limits:
            memory: "64Mi"
            cpu: "250m"

        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: POD_SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: CPU_REQUEST
            valueFrom:
              resourceFieldRef:
                containerName: {{ .ProvisionerClientName }}
                resource: requests.cpu
          - name: CPU_LIMIT
            valueFrom:
              resourceFieldRef:
                containerName: {{ .ProvisionerClientName }}
                resource: limits.cpu
          - name: MEM_REQUEST
            valueFrom:
              resourceFieldRef:
                containerName: {{ .ProvisionerClientName }}
                resource: requests.memory
          - name: MEM_LIMIT
            valueFrom:
              resourceFieldRef:
                containerName: {{ .ProvisionerClientName }}
                resource: limits.memory

        volumeMounts:
          - name: nfs-pvc
            mountPath: "/mnt"
  volumeClaimTemplates:
  - metadata:
      name: nfs-pvc
      annotations:
        volume.beta.kubernetes.io/storage-class: {{ .StorageClassName }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
# ------------------------- Default NS Service ------------------------- #
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .ProvisionerClientName }}
  labels:
    app: {{ .ProvisionerClientName }}
spec:
  ports:
  - port: 80
    name: {{ .ProvisionerClientName }}
  # clusterIP: None
  selector:
    app: {{ .ProvisionerClientName }}


# local variables:
# mode: yaml
# end:
